# Irssi config. {{{1
# Copyright 2010-2011 Patrick Brisbin <http://pbrisbin.com/posts/irssi>
# Copyright 2011-2012 Tom Vincent <http://tlvince.com/contact/>
# vim: ft=config fdm=marker

servers = (
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "yes";
    autoconnect = "no";
  },

  {
    address = "irc.oftc.net";
    chatnet = "oftc";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  },

  { address = "localhost"; chatnet = "bitlbee"; autoconnect = "yes"; },
  {
    address = "localhost";
    chatnet = "znc";
    port = "6668";
    autoconnect = "yes";
  },
  {
    address = "irc.gnome.org";
    chatnet = "gnome";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  }
);

chatnets = {
  freenode = { type = "IRC"; nick = "tlvince"; };
  oftc = { type = "IRC"; };
  bitlbee = { type = "IRC"; };
  znc = { type = "IRC"; };
  gnome = { type = "IRC"; nick = "tlvince"; };
};

aliases = {
  J = "join";
  LEAVE = "part";
  E = "exec -";
  EO = "exec - -o";
  EXIT = "quit";
  LL = "lastlog";
  W = "window";
  M = "mark";
  WC = "window close";
  WK = "window kill";
  WN = "window new hide";
  WA = "window goto active";
  RUN = "SCRIPT LOAD";
  Q = "QUERY";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $N}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: %m$0-%n}";
    act = "{sb Act: $0-}";
    more = "%k%3-- more --%n";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "yes";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "0";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        active = { };
        act = { };
        typing_notice = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "bottom";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };

    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    real_name = "Tom Vincent";
    user_name = "tom";
    nick = "tlvince";
    awaylog_file = "/dev/null";
    recode_autodetect_utf8 = "yes";
    recode_fallback = "CP1252";
  };

  "fe-text" = { actlist_sort = "refnum"; };

  "fe-common/core" = {
    emphasis = "OFF";
    theme = "tlvince";
    hilight_color = "= %R";
    beep_msg_level = "NOTICE MSGS HILIGHT";
    bell_beeps = "no";
    hilight_nick_matches = "no";
    autolog_path = "$HOME/.irssi/logs/$tag/$0.log";
    autolog = "yes";
  };

  "perl/core/scripts" = {
    neat_maxlength = "13";
    awl_display_key = "%K$H$N:$C$S ";
    awl_display_key_active = "%w$N:$C ";
    awl_position = "0";
    awl_sbar_maxlength = "no";
    awl_maxlines = "3";
    screen_away_message = "away";
    hilightwin_showprivmsg = "no";
    bitlbee_send_typing = "yes";
    lt_in_queries = "yes";
    away_reason = "Away from keyboard";
    autoaway = "300";
  };
};

ignores = (
  { level = "JOINS PARTS QUITS NICKS"; },
  { level = "MODES"; channels = ( "&bitlbee" ); }
);

hilights = (
  {
    text = "tlvince";
    nick = "no";
    word = "yes";
    fullword = "yes";
    color = "%M";
  },
  {
    text = "tlvince.com";
    nick = "no";
    word = "yes";
    fullword = "no";
    color = "%M";
  },
  {
    text = "@Tom";
    nick = "no";
    word = "yes";
    fullword = "yes";
    color = "%M";
  },
  {
    text = "onarray";
    nick = "no";
    word = "yes";
    fullword = "yes";
    color = "%M";
  }
);

logs = { };

windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = { name = "hilight"; sticky = "yes"; };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "&bitlbee";
        tag = "bitlbee";
      }
    );
  };
};
mainwindows = {
  1 = { first_line = "11"; lines = "44"; };
  2 = { first_line = "1"; lines = "10"; };
};
